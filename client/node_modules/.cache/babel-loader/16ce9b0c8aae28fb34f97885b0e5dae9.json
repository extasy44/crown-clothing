{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBdSWm72v4ly2ppO_G0F2JK9mA8qXHAJE4\",\n  authDomain: \"crown-db-f1642.firebaseapp.com\",\n  databaseURL: \"https://crown-db-f1642.firebaseio.com\",\n  projectId: \"crown-db-f1642\",\n  storageBucket: \"crown-db-f1642.appspot.com\",\n  messagingSenderId: \"480265775401\",\n  appId: \"1:480265775401:web:584e1e8dc3f396c9236f38\",\n  measurementId: \"G-D8BWZ5N63X\"\n};\nexport const createUserProfileDocument = async (userAuth, ...additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config); // export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n//     const collectionRef = firestore.collection(collectionKey);\n//     const batch = firestore.batch();\n//     objectsToAdd.forEach( obj => {\n//         const newDocRef = collectionRef.doc();\n//         batch.set(newDocRef, obj);\n//     });\n//     return await batch.commit();\n// }\n\nexport const convertCollectionsSanpshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/heejunseo/Desktop/React-e/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","convertCollectionsSanpshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiB,GAAGC,cAApB,KAAuC;AAC5E,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AACjB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACC,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAMa,KAAN,EAAa;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACJ;AACH;;AAED,SAAOf,OAAP;AACH,CAtBM;AAwBPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB,E,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,OAAO,MAAM6B,+BAA+B,GAAIC,WAAD,IAAiB;AAC5D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqBnB,GAAG,IAAI;AACtD,UAAM;AAAEoB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBrB,GAAG,CAACsB,IAAJ,EAAzB;AAEA,WAAO;AACHC,MAAAA,SAAS,EAAEC,SAAS,CAACJ,KAAK,CAACK,WAAN,EAAD,CADjB;AAEHC,MAAAA,EAAE,EAAE1B,GAAG,CAAC0B,EAFL;AAGHN,MAAAA,KAHG;AAIHC,MAAAA;AAJG,KAAP;AAMH,GAT6B,CAA9B;AAWA,SAAOJ,qBAAqB,CAACU,MAAtB,CAA6B,CAACC,WAAD,EAAcC,UAAd,KAA6B;AAC7DD,IAAAA,WAAW,CAACC,UAAU,CAACT,KAAX,CAAiBK,WAAjB,EAAD,CAAX,GAA8CI,UAA9C;AACA,WAAOD,WAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH,CAhBM;AAkBP,OAAO,MAAME,IAAI,GAAG7C,QAAQ,CAAC6C,IAAT,EAAb;AACP,OAAO,MAAM/B,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgC,QAAQ,GAAG,IAAI9C,QAAQ,CAAC6C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9C,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBdSWm72v4ly2ppO_G0F2JK9mA8qXHAJE4\",\n    authDomain: \"crown-db-f1642.firebaseapp.com\",\n    databaseURL: \"https://crown-db-f1642.firebaseio.com\",\n    projectId: \"crown-db-f1642\",\n    storageBucket: \"crown-db-f1642.appspot.com\",\n    messagingSenderId: \"480265775401\",\n    appId: \"1:480265775401:web:584e1e8dc3f396c9236f38\",\n    measurementId: \"G-D8BWZ5N63X\"\n};\n\nexport const createUserProfileDocument = async (userAuth, ...additionalData) => {\n    if(!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n\n    if(!snapShot.exists){\n       const { displayName, email } = userAuth;\n       const createdAt = new Date();\n       \n       try{\n           await userRef.set({\n             displayName,\n             email,\n             createdAt,\n             ...additionalData,\n           });\n       }catch(error) {\n            console.log('error creating user', error.message);\n       }\n    }\n\n    return userRef;\n}  \n\nfirebase.initializeApp(config);\n\n\n// export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n//     const collectionRef = firestore.collection(collectionKey);\n\n//     const batch = firestore.batch();\n//     objectsToAdd.forEach( obj => {\n//         const newDocRef = collectionRef.doc();\n//         batch.set(newDocRef, obj);\n//     });\n\n//     return await batch.commit();\n// }\n\nexport const convertCollectionsSanpshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n        const { title, items } = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id, \n            title,\n            items\n        }\n    });\n\n    return transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    }, {});\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}