{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSanpshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSanpshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSanpshotToMap(snapshot);\n  //     dispatch(fetchCollectionSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/Users/heejunseo/Desktop/React-e/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSanpshotToMap","fetchCollectionSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","put","error","message","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,sBADJ,EAC4BC,uBAD5B,QAEO,gBAFP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AAEpC,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMX,IAAI,CAACE,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMG,GAAG,CAACT,sBAAsB,CAACQ,cAAD,CAAvB,CAAT;AACH,GALD,CAKE,OAAME,KAAN,EAAa;AACX,UAAMD,GAAG,CAACR,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH,GATmC,CAcpC;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,SAAS,CAACM,eAAe,CAACW,sBAAjB,EAAyCV,qBAAzC,CAAf;AACH;AAAA","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSanpshotToMap } from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionSuccess, fetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\n\nexport function* fetchCollectionsAsync(){\n  \n    try{\n        const collectionRef = firestore.collection(\"collections\");\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSanpshotToMap, snapshot);\n        yield put(fetchCollectionSuccess(collectionsMap))\n    } catch(error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n    \n\n\n\n    // collectionRef\n    //   .get()\n    //   .then((snapshot) => {\n    //     const collectionsMap = convertCollectionsSanpshotToMap(snapshot);\n    //     dispatch(fetchCollectionSuccess(collectionsMap));\n    //   })\n    //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n};\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n};"]},"metadata":{},"sourceType":"module"}