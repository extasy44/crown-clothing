{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/heejunseo/Desktop/React-e/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.action';\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\n    try{\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n\n    }catch(error){\n        yield put(SignInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle(){\n    try{\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    }catch(error){\n        yield put(SignInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n\n    }catch(error){\n       yield put(SignInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(error){\n        yield put(SignInFailure(error));\n    }\n}\n\nexport function* signOut() {\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(error){\n        yield put(signOutFailure(error));\n    }\n}\n\nexport function* signUp({payload: {email, password, displayName}}) {\n    try{\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({ user, additionalData: { displayName }}));\n    }catch(error){\n        yield put(signUpFailure(error));\n    }\n}\n\nexport function* signInAfterSignUp({payload: { user, additionalData }}) {\n    yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)   \n    ]);\n}"]},"metadata":{},"sourceType":"module"}