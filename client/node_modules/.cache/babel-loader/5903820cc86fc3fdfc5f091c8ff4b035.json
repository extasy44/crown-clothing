{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.Items);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quuantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/heejunseo/Desktop/React-e/crown-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","Items","selectCartHidden","hidden","selectCartItemsCount","cartItems","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","quuantity","price"],"mappings":"AAAA,SAASA,cAAT,QAAgC,UAAhC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,KAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACI,MAF6B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CK,SAAS,IAAIA,SAAS,CAACC,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACC,QAFtB,EAGT,CAHS,CAFiC,CAA3C;AASP,OAAO,MAAMC,eAAe,GAAGd,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCK,SAAS,IAAIA,SAAS,CAACC,MAAV,CACT,CAACC,mBAAD,EAAsBC,QAAtB,KACAD,mBAAmB,GAAGC,QAAQ,CAACG,SAAT,GAAqBH,QAAQ,CAACI,KAF3C,EAGT,CAHS,CAF4B,CAAtC","sourcesContent":["import { createSelector }  from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.Items\n);\n\nexport const selectCartHidden = createSelector(\n    [selectCart],\n    cart => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n        (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity,\n        0\n    )\n);\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce(\n        (accumalatedQuantity, cartItem) => \n        accumalatedQuantity + cartItem.quuantity * cartItem.price,\n        0\n    )\n)"]},"metadata":{},"sourceType":"module"}