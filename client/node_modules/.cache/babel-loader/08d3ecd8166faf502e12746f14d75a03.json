{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSanpshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionsSanpshotToMap, snapshot); // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionsMap = convertCollectionsSanpshotToMap(snapshot);\n  //     dispatch(fetchCollectionSuccess(collectionsMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/Users/heejunseo/Desktop/React-e/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSanpshotToMap","fetchCollectionSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACIC,sBADJ,EAC4BC,uBAD5B,QAEO,gBAFP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACE,+BAAD,EAAkCS,QAAlC,CAAjC,CALoC,CAOpC;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAAA;AAED,OAAO,UAAUG,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CAACM,eAAe,CAACU,sBAAjB,EAAyCT,qBAAzC,CAAf;AACH;AAAA","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSanpshotToMap } from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionSuccess, fetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\n\nexport function* fetchCollectionsAsync(){\n    yield console.log('I am fired');\n\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSanpshotToMap, snapshot);\n\n    // collectionRef\n    //   .get()\n    //   .then((snapshot) => {\n    //     const collectionsMap = convertCollectionsSanpshotToMap(snapshot);\n    //     dispatch(fetchCollectionSuccess(collectionsMap));\n    //   })\n    //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n};\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n};"]},"metadata":{},"sourceType":"module"}